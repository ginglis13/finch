# - When a third-party action is added (i.e., `uses`), please also add it to `download-licenses` in Makefile.
# - When a job is added/removed/renamed, please make corresponding changes in ci-docs.yaml.
name: CI
on:
  push:
    branches:
      # TODO: change to main when opening PR to merge windev branch in.
      - main
    paths-ignore:
      - '**.md'
      - 'contrib/**'
      - '.github/CODEOWNERS'
  pull_request:
    branches:
      # TODO: change to main when opening PR to merge windev branch in.
      - main
    paths-ignore:
      - '**.md'
      - 'contrib/**'
      - '.github/CODEOWNERS'
permissions:
  id-token: write
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    if: github.repository == 'TODO; remove on merge with main, skip macOS for now...'
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            [self-hosted, macos, amd64, 13, test],
            [self-hosted, macos, amd64, 12, test],
            [self-hosted, macos, arm64, 13, test],
            [self-hosted, macos, arm64, 12, test]
          ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          # We need to get all the git tags to make version injection work. See VERSION in Makefile for more detail.
          fetch-depth: 0
          persist-credentials: false
          submodules: true
      - name: Set output variables
        id: vars
        run: |
          has_creds=${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name }}
          echo "has_creds=$has_creds" >> $GITHUB_OUTPUT
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        if: steps.vars.outputs.has_creds == true
        with:
          role-to-assume: ${{ secrets.ROLE }}
          role-session-name: credhelper-test
          aws-region: ${{ secrets.REGION }}
      - name: Clean up previous files
        run: |
          sudo rm -rf /opt/finch
          sudo rm -rf ~/.finch
          sudo rm -rf ./_output
          if pgrep '^qemu-system'; then
            sudo pkill '^qemu-system'
          fi
          if pgrep '^socket_vmnet'; then
            sudo pkill '^socket_vmnet'
          fi
      - name: Install Rosetta 2
        run: echo "A" | softwareupdate --install-rosetta || true
      - run: brew install go lz4 automake autoconf libtool
        shell: zsh {0}
      - name: Build project
        run: |
          export PATH="/opt/homebrew/opt/libtool/libexec/gnubin:$PATH"
          make
        shell: zsh {0}
      - run: |
          git status
          git clean -f -d
          REGISTRY=${{ steps.vars.outputs.has_creds == true && env.REGISTRY || '' }} make test-e2e
        shell: zsh {0}
  e2e-tests-windows:
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            #[self-hosted, windows, amd64, test],
            [windows-latest],
          ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set output variables
        id: vars
        run: |
          $has_creds="${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name }}"
          echo "has_creds=$has_creds" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          exit 0 # will be 1 if false
      # - name: configure aws credentials
      #   if: env.has_creds == 'true'
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.ROLE }}
      #     role-session-name: credhelper-test
      #     aws-region: ${{ secrets.REGION }}
      - name: Run e2e Tests
        run: |
          $REGISTRY=${{ steps.vars.outputs.has_creds == true && env.REGISTRY || '' }} make test-e2e
          echo $REGISTRY

